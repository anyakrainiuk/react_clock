{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","setState","prevClockName","clockName","prevDate","props","console","debug","info","toLocaleTimeString","className","Component","getRandomName","value","now","toString","slice","App","hasClock","document","addEventListener","event","preventDefault","removeEventListener","clearInterval","ReactDOM","render","getElementById"],"mappings":"qMAUaA,EAAb,4MACEC,MAAyB,CACvBC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,SACzB,OAVP,gCAaE,cAGG,IAFYM,EAEb,EAFEC,UACMC,EACR,EADET,KAEMQ,EAAcL,KAAKO,MAAnBF,UACAR,EAASG,KAAKJ,MAAdC,KAEJO,IAAkBC,GAEpBG,QAAQC,MAAR,uBAA8BL,EAA9B,eAAkDC,IAGhDC,IAAaT,GAEfW,QAAQE,KAAKb,EAAKc,wBA3BxB,oBA+BE,WACE,IAAQN,EAAcL,KAAKO,MAAnBF,UAER,OACE,sBAAKO,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGP,IAGF,YAED,sBAAMO,UAAU,cAAhB,SACGZ,KAAKJ,MAAMC,KAAKc,8BA3C3B,GAA2BE,a,MCN3B,SAASC,IACP,IAAMC,EAAQjB,KAAKkB,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBH,GAUX,IAAMI,EAAb,4MACEvB,MAAQ,CACNwB,UAAU,EACVf,UAAW,WAHf,EAMEN,QAAU,EANZ,uDAQE,WAAqB,IAAD,OAClBsB,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKrB,SAAS,CAAEiB,UAAU,OAG5BC,SAASC,iBAAiB,SAAS,SAACC,GAClCA,EAAMC,iBACN,EAAKrB,SAAS,CAAEiB,UAAU,OAG5BpB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEE,UAAWS,QAC1B,QArBP,kCAwBE,WAAwB,IAAD,OACrBO,SAASI,oBAAoB,eAAe,SAACF,GAC3CA,EAAMC,iBACN,EAAKrB,SAAS,CAAEiB,UAAU,OAG5BC,SAASI,oBAAoB,SAAS,SAACF,GACrCA,EAAMC,iBACN,EAAKrB,SAAS,CAAEiB,UAAU,OAG5BnB,OAAOyB,cAAc1B,KAAKD,WAnC9B,oBAsCE,WACE,MAAgCC,KAAKJ,MAA7BwB,EAAR,EAAQA,SAAUf,EAAlB,EAAkBA,UAElB,OACE,sBAAKO,UAAU,MAAf,UACE,6CACCQ,GAAY,cAAC,EAAD,CAAOf,UAAWA,WA5CvC,GAAyBQ,aCdzBc,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.cdfbecf3.chunk.js","sourcesContent":["import { Component } from 'react';\n\nexport type Props = {\n  clockName: string;\n};\n\nexport type State = {\n  date: Date,\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ date: new Date() });\n    }, 1000);\n  }\n\n  componentDidUpdate(\n    { clockName: prevClockName }: Readonly<Props>,\n    { date: prevDate }: Readonly<State>,\n  ) {\n    const { clockName } = this.props;\n    const { date } = this.state;\n\n    if (prevClockName !== clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevClockName} to ${clockName}`);\n    }\n\n    if (prevDate !== date) {\n      // eslint-disable-next-line no-console\n      console.info(date.toLocaleTimeString());\n    }\n  }\n\n  render() {\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.date.toLocaleTimeString()}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Clock } from './Clock';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport type Props = {};\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends Component<Props, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: true });\n    });\n\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.removeEventListener('click', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: true });\n    });\n\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock clockName={clockName} /> }\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}